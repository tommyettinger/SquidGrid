/*
 */

/*
 * ControlPanel.java
 *
 * Created on Dec 5, 2009, 11:58:20 PM
 */
package squidpony.squidgrid.testing;

import java.awt.Font;
import java.awt.GraphicsEnvironment;

/**
 *
 * @author Eben
 */
public class ControlPanel extends javax.swing.JPanel {

    /**
	 * 
	 */
	private static final long serialVersionUID = 2129103960526487093L;
	/** Creates new form ControlPanel */
    public ControlPanel() {
        initComponents();
        //Get the local graphics environment
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();

        //Get the font names from the graphics environment
        fontList = ge.getAvailableFontFamilyNames();

        fontComboBox.removeAllItems();
        for (int i = 0; i < fontList.length; i++) {
            fontComboBox.addItem(fontList[i]);
        }

        fontComboBox.setMaximumRowCount(8);
        fontComboBox.setSelectedItem(fontComboBox.getItemAt(0));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        xField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        yField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        sizeField = new javax.swing.JTextField();
        fontComboBox = new javax.swing.JComboBox();
        boldCheckBox = new javax.swing.JCheckBox();
        italicsCheckBox = new javax.swing.JCheckBox();

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        xField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        xField.setText("30");
        xField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("X");

        yField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        yField.setText("20");
        yField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yFieldActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel2.setText("Size:");

        sizeField.setText("16");
        sizeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeFieldActionPerformed(evt);
            }
        });

        fontComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        boldCheckBox.setFont(new java.awt.Font("Tahoma", 1, 12));
        boldCheckBox.setText("BOLD");

        italicsCheckBox.setFont(new java.awt.Font("Tahoma", 2, 12));
        italicsCheckBox.setText("Italics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(xField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boldCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(italicsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(xField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1)
                .addComponent(yField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(sizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(fontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(boldCheckBox)
                .addComponent(italicsCheckBox)
                .addComponent(updateButton))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void xFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xFieldActionPerformed
        validateX();
    }//GEN-LAST:event_xFieldActionPerformed

    private void yFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yFieldActionPerformed
        validateY();
    }//GEN-LAST:event_yFieldActionPerformed

    private void validateX() {
        try {
            int t = Integer.valueOf(xField.getText());
            x = t;
        } catch (NumberFormatException n) {
            xField.setText("" + x);
        }
    }

    private void validateY() {
        try {
            int t = Integer.valueOf(yField.getText());
            y = t;
        } catch (NumberFormatException n) {
            yField.setText("" + y);
        }
    }

    private void validateSize() {
        try {
            int t = Integer.valueOf(sizeField.getText());
            size = t;
        } catch (NumberFormatException n) {
            sizeField.setText("" + size);
        }
    }

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateReady = true;
        validateX();
        validateY();
        validateSize();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void sizeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeFieldActionPerformed
        validateSize();
    }//GEN-LAST:event_sizeFieldActionPerformed

    public boolean getUpdateReady() {
        if (updateReady) {
            updateReady = false;
            return true;
        } else {
            return false;
        }
    }

    public int getXSize() {
        return x;
    }

    public int getYSize() {
        return y;
    }

    public int getFontSize() {
        return size;
    }

    public Font getFontFace(){
        return new Font((String) fontComboBox.getSelectedItem(),getFontStyle(),size);
    }
    
    private int getFontStyle(){
        if (boldCheckBox.isSelected()){
            if(italicsCheckBox.isSelected()){
                return Font.BOLD+Font.ITALIC;
            }
            return Font.BOLD;
        }else if (italicsCheckBox.isSelected()){
            return Font.ITALIC;
        }else{
            return Font.PLAIN;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boldCheckBox;
    private javax.swing.JComboBox fontComboBox;
    private javax.swing.JCheckBox italicsCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField sizeField;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField xField;
    private javax.swing.JTextField yField;
    // End of variables declaration//GEN-END:variables
    //custom variables
    private int x = 80, y = 50, size = 14;
    private boolean updateReady = false;
    private String fontList[];
}
